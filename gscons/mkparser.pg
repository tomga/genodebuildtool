


CmdList: Command | CmdList LINE_END Command;

Command: VarIdentWithOptWs CmdAssign |
         ExportWithWs VarIdentWithOptWs CmdAssign? |
         VarIdent BRACE_OPEN VarIdent BRACE_CLOSE WS? CmdAssign |
         ExportWithWs VarIdent BRACE_OPEN VarIdent BRACE_CLOSE WS? CmdAssign? |
				 CondCmd |
				 IncludeCmd |
				 VPathCmd |
				 RValueExpr RuleStructureSuffix? |
				 RULE_COMMAND |
				 WSOPT |
				 COMMENT;


RuleStructureSuffix: ColonSeparator RValueExpr?;

CmdAssign: CmdOper WSOPT OptRValueExpr;

ExportWithWs: EXPORT WS;

CmdOper: CMD_APPEND |
         CMD_RECURSIVE_EXPAND_ASSIGN |
				 CMD_SIMPLE_EXPAND_ASSIGN |
				 CMD_OPTASSIGN;

CondCmd: Condition LINE_END CmdList LINE_END "endif" |
         Condition LINE_END CmdList LINE_END "else" LINE_END CmdList LINE_END "endif" |
         Condition LINE_END CmdList LINE_END "else" WS CondCmd;

Condition: IfdefOper WS VarName |
           IfeqOper WS BRACE_OPEN ParamExpr CommaSeparator ParamExpr BRACE_CLOSE;

IfdefOper: "ifdef" | "ifndef";

IfeqOper: "ifeq" | "ifneq";

IncludeCmd: "include" WSOPT OptRValueExpr |
						"-include" WSOPT OptRValueExpr;

VPathCmd: "vpath" WS VPATH_PATTERN WS RValueExpr;

WSOPT: WS | EMPTY;

OptRValueExpr: RValueExpr |
							 EMPTY;

RValueExpr: RValuePart |
            RValueExpr RValuePart |
            RValueExpr WS;

RValuePart: RValuePartText |
						RValuePartExpr;


RValuePartExpr: DOLLAR VarName |
            		DOLLAR BRACE_OPEN Fun1Name WS? ParamExpr BRACE_CLOSE |
            		DOLLAR BRACE_OPEN Fun2Name WS? ParamExpr CommaSeparator ParamExpr BRACE_CLOSE |
            		DOLLAR BRACE_OPEN Fun3Name WS? ParamExpr CommaSeparator ParamExpr CommaSeparator ParamExpr BRACE_CLOSE |
            		DOLLAR BRACE_OPEN FunAnyName WS? ParamList BRACE_CLOSE |
            		DOLLAR BRACE_OPEN VarName BRACE_CLOSE |
            		DOLLAR BRACE_OPEN VAR_INDEX BRACE_CLOSE |
            		DOLLAR BRACE_OPEN VAR_SPECIAL BRACE_CLOSE |
            	  DOLLAR BRACE_OPEN VarName CMD_SIMPLE_EXPAND_ASSIGN RValueExpr BRACE_CLOSE |
            		DOLLAR BRACE_OPEN VarName COLON RValueExpr CMD_RECURSIVE_EXPAND_ASSIGN RValueExpr BRACE_CLOSE;

ParamList: ParamExpr |
           ParamList CommaSeparator ParamExpr;

ParamExpr: ParamPart |
           ParamExpr ParamPart |
           ParamExpr WS |
					 EMPTY;

ParamPart: ParamPartText |
					 ParamPartExpr;


ParamPartExpr: DOLLAR VarName |
           		 DOLLAR BRACE_OPEN Fun1Name WS? ParamExpr BRACE_CLOSE |
            	 DOLLAR BRACE_OPEN Fun2Name WS? ParamExpr CommaSeparator ParamExpr BRACE_CLOSE |
            	 DOLLAR BRACE_OPEN Fun3Name WS? ParamExpr CommaSeparator ParamExpr CommaSeparator ParamExpr BRACE_CLOSE |
            	 DOLLAR BRACE_OPEN FunAnyName WS? ParamList BRACE_CLOSE |
            	 DOLLAR BRACE_OPEN VarName BRACE_CLOSE |
            	 DOLLAR BRACE_OPEN VAR_INDEX BRACE_CLOSE |
            	 DOLLAR BRACE_OPEN VAR_SPECIAL BRACE_CLOSE |
            	 DOLLAR BRACE_OPEN VarName CMD_SIMPLE_EXPAND_ASSIGN ParamExpr BRACE_CLOSE |
            	 DOLLAR BRACE_OPEN VarName COLON ParamExpr CMD_RECURSIVE_EXPAND_ASSIGN ParamExpr BRACE_CLOSE;

VarName: VarIdent |
         VarIdent RValuePartExpr |
         VarIdent BRACE_OPEN RValuePartExpr BRACE_CLOSE;

RValuePartText: TEXT_CHAR |
                SPECIAL_NOESCAPE |
                SPECIAL_ESCAPE |
                DOUBLE_DOLLAR |
								VarIdentWithOptWs |
							  VAR_IDENT_SECOND_ALLOWED |
                COMMA |
								CMD_RECURSIVE_EXPAND_ASSIGN |
            		ESCAPED |
								LINE_CONTINUATION;

ParamPartText: TEXT_CHAR |
               SPECIAL_NOESCAPE |
							 SPECIAL_ESCAPE |
               DOUBLE_DOLLAR |
							 VarIdentWithOptWs |
							 VAR_IDENT_SECOND_ALLOWED |
							 CMD_RECURSIVE_EXPAND_ASSIGN |
            	 ESCAPED |
							 LINE_CONTINUATION;

CommaSeparator: COMMA WS?;

ColonSeparator: COLON WS?;

Fun1Name: "basename " |
					"dir " |
					"firstword " |
					"lastword " |
					"notdir " |
					"realpath " |
					"sort " |
					"strip " |
					"wildcard ";

Fun2Name: "addprefix " |
					"addsuffix " |
					"call " |
					"filter " |
					"filter-out " |
					"findstring ";

Fun3Name: "foreach " |
					"if " |
					"patsubst " |
					"subst ";

FunAnyName: "error " |
            "shell ";

VarIdentWithOptWs: VarIdent WSOPT;

VarIdent: VarIdentStd |
          VAR_SPECIAL;

VarIdentStd: VAR_IDENT_START |
             VarIdent VAR_IDENT_START |
             VarIdent VAR_IDENT_SECOND_ALLOWED;

terminals
SPECIAL_ESCAPE: /~~./;
SPECIAL_NOESCAPE: /~[^~]/;
DOUBLE_DOLLAR: /\$\$/;
LINE_END: /[ ]*(#.*)?\n[ ]*/;
TEXT_CHAR: /[^-~#,:$\\\n\t (){}A-Za-z0-9_@*]/;
VAR_IDENT_START: /[A-Za-z_]/;
VAR_IDENT_SECOND_ALLOWED: /[-0-9]/;
VAR_INDEX: /[0-9]/;
VAR_SPECIAL: /[@*]/;
ESCAPED: /\\./;
LINE_CONTINUATION: /\\\n\t*/;
WS: /[ ]+/;
TAB: /[\t]/;
COMMENT: /#.*/;
RULE_COMMAND: /\t.*/;
DOLLAR: /\$/;
COMMA: /,/;
COLON: /[:]/;
BRACE_OPEN: /[({]/;
BRACE_CLOSE: /[)}]/;
CMD_APPEND: "+=";
CMD_RECURSIVE_EXPAND_ASSIGN: "=";
CMD_SIMPLE_EXPAND_ASSIGN: ":=";
CMD_OPTASSIGN: "?=";
EXPORT: "export";
VPATH_PATTERN: /[a-zA-Z_0-9.%\/][a-zA-Z_0-9.%\/]*/;